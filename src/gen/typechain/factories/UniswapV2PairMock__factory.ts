/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { UniswapV2PairMock } from "../UniswapV2PairMock";

export class UniswapV2PairMock__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<UniswapV2PairMock> {
    return super.deploy(overrides || {}) as Promise<UniswapV2PairMock>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): UniswapV2PairMock {
    return super.attach(address) as UniswapV2PairMock;
  }
  connect(signer: Signer): UniswapV2PairMock__factory {
    return super.connect(signer) as UniswapV2PairMock__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UniswapV2PairMock {
    return new Contract(address, _abi, signerOrProvider) as UniswapV2PairMock;
  }
}

const _abi = [
  {
    inputs: [],
    name: "sync",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052348015600f57600080fd5b50606d80601d6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063fff6cae914602d575b600080fd5b60336035565b005b56fea2646970667358221220a00ce9dbff2e7930bee089d6a9902416567e3d33e8949d4ae4546f33b3c1421964736f6c63430008000033";
