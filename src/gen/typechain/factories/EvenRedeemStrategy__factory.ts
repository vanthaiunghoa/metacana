/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  EvenRedeemStrategy,
  EvenRedeemStrategyInterface,
} from "../EvenRedeemStrategy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nftId",
        type: "uint256",
      },
    ],
    name: "canRedeem",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610112806100206000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063cc1f8ffa14602d575b600080fd5b603c60383660046063565b6050565b604051901515815260200160405180910390f35b6000605b60028360a4565b159392505050565b600080604083850312156074578182fd5b823573ffffffffffffffffffffffffffffffffffffffff811681146096578283fd5b946020939093013593505050565b60008260d7577f4e487b710000000000000000000000000000000000000000000000000000000081526012600452602481fd5b50069056fea26469706673582212207e7ca94ab33f8925c1026fd01d82cd232b933e448dee12b1b8c8339539429e5164736f6c63430008030033";

type EvenRedeemStrategyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EvenRedeemStrategyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EvenRedeemStrategy__factory extends ContractFactory {
  constructor(...args: EvenRedeemStrategyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "EvenRedeemStrategy";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<EvenRedeemStrategy> {
    return super.deploy(overrides || {}) as Promise<EvenRedeemStrategy>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): EvenRedeemStrategy {
    return super.attach(address) as EvenRedeemStrategy;
  }
  connect(signer: Signer): EvenRedeemStrategy__factory {
    return super.connect(signer) as EvenRedeemStrategy__factory;
  }
  static readonly contractName: "EvenRedeemStrategy";
  public readonly contractName: "EvenRedeemStrategy";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EvenRedeemStrategyInterface {
    return new utils.Interface(_abi) as EvenRedeemStrategyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EvenRedeemStrategy {
    return new Contract(address, _abi, signerOrProvider) as EvenRedeemStrategy;
  }
}
