/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Forwarder, ForwarderInterface } from "../Forwarder";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Forwarder.ForwardRequest",
        name: "req",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
    ],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Forwarder.ForwardRequest",
        name: "req",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x61014060405234801561001157600080fd5b50604080518082018252600f81527f47534e763220466f72776172646572000000000000000000000000000000000060208083019182528351808501909452600584527f302e302e31000000000000000000000000000000000000000000000000000000908401528151902060e08190527fae209a0b48f21c054280f2455d32cf309387644879d9acbd8ffc1991638118856101008190524660a0529192917f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6101208184846040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b6080523060601b60c052610120525061013892505050565b60805160a05160c05160601c60e051610100516101205161103761018a60003960006106b801526000610707015260006106e201526000610639015260006106630152600061068d01526110376000f3fe6080604052600436106100345760003560e01c80632d0335ab1461003957806347153f821461008f578063bf5d3bdb146100b0575b600080fd5b34801561004557600080fd5b5061007c610054366004610c47565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b6040519081526020015b60405180910390f35b6100a261009d366004610d49565b6100e0565b604051610086929190610e93565b3480156100bc57600080fd5b506100d06100cb366004610d49565b6103cd565b6040519015158152602001610086565b600060606100ef8585856103cd565b610180576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f4d696e696d616c466f727761726465723a207369676e617475726520646f657360448201527f206e6f74206d617463682072657175657374000000000000000000000000000060648201526084015b60405180910390fd5b61018f60808601356001610f2c565b60008061019f6020890189610c47565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000808660200160208101906101f39190610c47565b73ffffffffffffffffffffffffffffffffffffffff166060880135604089013561022060a08b018b610ec9565b61022d60208d018d610c47565b60405160200161023f93929190610e3b565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905261027791610e77565b600060405180830381858888f193505050503d80600081146102b5576040519150601f19603f3d011682016040523d82523d6000602084013e6102ba565b606091505b50915091508161037d57604481511015610330576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f5472616e73616374696f6e2072657665727465642073696c656e746c790000006044820152606401610177565b6004810190508080602001905181019061034a9190610c82565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101779190610eb6565b61038c603f6060890135610f69565b5a116103c1577f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b90969095509350505050565b6000806104ed84848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506104e792507fdd8f4b70b0f4393e889bd39128a30628a78b61816a9eb8199759e7a349657e48915061043d905060208a018a610c47565b61044d60408b0160208c01610c47565b60408b013560608c013560808d013561046960a08f018f610ec9565b604051610477929190610e2b565b60408051918290038220602083019890985273ffffffffffffffffffffffffffffffffffffffff96871690820152949093166060850152608084019190915260a083015260c082015260e0810191909152610100016040516020818303038152906040528051906020012061058c565b906105fb565b905060808501356000806105046020890189610c47565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414801561058357506105546020860186610c47565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b95945050505050565b60006105f561059961061f565b836040517f19010000000000000000000000000000000000000000000000000000000000006020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b92915050565b600080600061060a8585610756565b91509150610617816107c6565b509392505050565b60003073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614801561068557507f000000000000000000000000000000000000000000000000000000000000000046145b156106b157507f0000000000000000000000000000000000000000000000000000000000000000610753565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c090920190925280519101205b90565b60008082516041141561078d5760208301516040840151606085015160001a61078187828585610ae7565b945094505050506107bf565b8251604014156107b757602083015160408401516107ac868383610bff565b9350935050506107bf565b506000905060025b9250929050565b6000816004811115610801577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b141561080c57610ae4565b6001816004811115610847577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14156108af576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610177565b60028160048111156108ea577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415610952576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610177565b600381600481111561098d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415610a1b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f75650000000000000000000000000000000000000000000000000000000000006064820152608401610177565b6004816004811115610a56577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415610ae4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c60448201527f75650000000000000000000000000000000000000000000000000000000000006064820152608401610177565b50565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115610b1e5750600090506003610bf6565b8460ff16601b14158015610b3657508460ff16601c14155b15610b475750600090506004610bf6565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610b9b573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff8116610bef57600060019250925050610bf6565b9150600090505b94509492505050565b6000807f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831660ff84901c601b01610c3987828885610ae7565b935093505050935093915050565b600060208284031215610c58578081fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114610c7b578182fd5b9392505050565b600060208284031215610c93578081fd5b815167ffffffffffffffff80821115610caa578283fd5b818401915084601f830112610cbd578283fd5b815181811115610ccf57610ccf610fd2565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908382118183101715610d1557610d15610fd2565b81604052828152876020848701011115610d2d578586fd5b610d3e836020830160208801610fa2565b979650505050505050565b600080600060408486031215610d5d578182fd5b833567ffffffffffffffff80821115610d74578384fd5b9085019060c08288031215610d87578384fd5b90935060208501359080821115610d9c578384fd5b818601915086601f830112610daf578384fd5b813581811115610dbd578485fd5b876020828501011115610dce578485fd5b6020830194508093505050509250925092565b60008151808452610df9816020860160208601610fa2565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6000828483379101908152919050565b6000838583375060609190911b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000169101908152601401919050565b60008251610e89818460208701610fa2565b9190910192915050565b6000831515825260406020830152610eae6040830184610de1565b949350505050565b600060208252610c7b6020830184610de1565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112610efd578283fd5b83018035915067ffffffffffffffff821115610f17578283fd5b6020019150368190038213156107bf57600080fd5b60008219821115610f64577f4e487b710000000000000000000000000000000000000000000000000000000081526011600452602481fd5b500190565b600082610f9d577f4e487b710000000000000000000000000000000000000000000000000000000081526012600452602481fd5b500490565b60005b83811015610fbd578181015183820152602001610fa5565b83811115610fcc576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea2646970667358221220bcb590fc8ac7a9572889d8e6ac4f926eb85ffd2861413b0d218269d1aa1e7f8464736f6c63430008030033";

type ForwarderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ForwarderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Forwarder__factory extends ContractFactory {
  constructor(...args: ForwarderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Forwarder";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Forwarder> {
    return super.deploy(overrides || {}) as Promise<Forwarder>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Forwarder {
    return super.attach(address) as Forwarder;
  }
  connect(signer: Signer): Forwarder__factory {
    return super.connect(signer) as Forwarder__factory;
  }
  static readonly contractName: "Forwarder";
  public readonly contractName: "Forwarder";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ForwarderInterface {
    return new utils.Interface(_abi) as ForwarderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Forwarder {
    return new Contract(address, _abi, signerOrProvider) as Forwarder;
  }
}
