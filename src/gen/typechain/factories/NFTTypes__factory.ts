/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { NFTTypes, NFTTypesInterface } from "../NFTTypes";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "NFT_Type",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610206806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80635ef8693914610030575b600080fd5b61004361003e3660046100f3565b610059565b604051610050919061010b565b60405180910390f35b600060208190529081526040902080546100729061017c565b80601f016020809104026020016040519081016040528092919081815260200182805461009e9061017c565b80156100eb5780601f106100c0576101008083540402835291602001916100eb565b820191906000526020600020905b8154815290600101906020018083116100ce57829003601f168201915b505050505081565b600060208284031215610104578081fd5b5035919050565b6000602080835283518082850152825b818110156101375785810183015185820160400152820161011b565b818111156101485783604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b600181811c9082168061019057607f821691505b602082108114156101ca577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b5091905056fea2646970667358221220a597e2dce72d793bf0c5958a0d7e1823c1baa5c3cdc2b1626c6043fe1672e6a564736f6c63430008030033";

type NFTTypesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTTypesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTTypes__factory extends ContractFactory {
  constructor(...args: NFTTypesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "NFTTypes";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NFTTypes> {
    return super.deploy(overrides || {}) as Promise<NFTTypes>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): NFTTypes {
    return super.attach(address) as NFTTypes;
  }
  connect(signer: Signer): NFTTypes__factory {
    return super.connect(signer) as NFTTypes__factory;
  }
  static readonly contractName: "NFTTypes";
  public readonly contractName: "NFTTypes";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTTypesInterface {
    return new utils.Interface(_abi) as NFTTypesInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTTypes {
    return new Contract(address, _abi, signerOrProvider) as NFTTypes;
  }
}
