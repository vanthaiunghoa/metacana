/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MetacanasCrowdsale,
  MetacanasCrowdsaleInterface,
} from "../MetacanasCrowdsale";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_metacanaToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_metacanasPerBNB",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_pancakeRouter",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "weiAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "TokenPurchase",
    type: "event",
  },
  {
    inputs: [],
    name: "CAP_PER_ADDRESS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CROWDSALE_END_TIME",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CROWDSALE_START_TIME",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "KARMASALE_START_TIME",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "KARMA_MEMBERSHIP_AMOUNT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIN_CONTRIBUTION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PUBLICSALE_START_TIME",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROUND_1_CAP",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROUND_2_CAP",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROUND_3_CAP",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "addAndLockLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "contributions",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "cookslist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentRound",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hasEnded",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isOpen",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "karmaSaleStarted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "liquidityLocked",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "metacanaToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "metacanasPerBNB",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicSaleStarted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
    ],
    name: "setCooksList",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "weiRaised",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6080604052600480547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690553480156200003957600080fd5b5060405162001cfc38038062001cfc8339810160408190526200005c916200015a565b6200006733620000e5565b600480547fffffffffffffffffffffff0000000000000000000000000000000000000000ff1661010073ffffffffffffffffffffffffffffffffffffffff95861602179055600591909155600680547fffffffffffffffffffffffff00000000000000000000000000000000000000001691909216179055620001c7565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000806000606084860312156200016f578283fd5b83516200017c81620001a1565b6020850151604086015191945092506200019681620001a1565b809150509250925092565b73ffffffffffffffffffffffffffffffffffffffff81168114620001c457600080fd5b50565b611b2580620001d76000396000f3fe6080604052600436106101a55760003560e01c806357976fb4116100e1578063b13b76d71161008a578063ec6065ff11610064578063ec6065ff14610838578063ecb70fb71461086a578063f2fde38b1461087f578063f6c0eb021461089f5761058d565b8063b13b76d7146107ee578063d173842a1461080a578063e9385821146108225761058d565b80638da5cb5b116100bb5780638da5cb5b14610778578063a2e91477146107b2578063a32bf597146107cc5761058d565b806357976fb41461072f578063603a767914610749578063715018a6146107635761058d565b80634042b66f1161014e57806342e94c901161012857806342e94c90146106be57806344f6bc11146106eb57806347535d7b146107005780634c4bdd121461071a5761058d565b80634042b66f1461066c57806340650c911461068257806340d501941461069e5761058d565b80632a511c3b1161017f5780632a511c3b146105f7578063389c6b8e1461061457806338d6db171461062c5761058d565b806312182bd81461059257806318458098146105c257806324b9f4c4146105da5761058d565b3661058d57336101b36108b6565b73ffffffffffffffffffffffffffffffffffffffff161461058b5733610260576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603360248201527f4d65746163616e617343726f776473616c653a2062656e65666963696172792060448201527f697320746865207a65726f20616464726573730000000000000000000000000060648201526084015b60405180910390fd5b635f2f90e04210156102f4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f4d65746163616e617343726f776473616c653a2073616c6520646964206e6f7460448201527f207374617274207965742e0000000000000000000000000000000000000000006064820152608401610257565b6102fc6108d3565b15610389576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f4d65746163616e617343726f776473616c653a2073616c65206973206f76657260448201527f2e000000000000000000000000000000000000000000000000000000000000006064820152608401610257565b610391610904565b60035410610447576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604260248201527f4d65746163616e617343726f776473616c653a205468652063617020666f722060448201527f7468652063757272656e7420726f756e6420686173206265656e2066696c6c6560648201527f642e000000000000000000000000000000000000000000000000000000000000608482015260a401610257565b6104503361094c565b6104dc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603760248201527f4d65746163616e617343726f776473616c653a2041646472657373206e6f742060448201527f616c6c6f77656420666f72207468697320726f756e642e0000000000000000006064820152608401610257565b33600090815260026020526040902054671bc16d674ec8000011610582576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603360248201527f4d65746163616e617343726f776473616c653a20496e646976696475616c206360448201527f617020686173206265656e2066696c6c65642e000000000000000000000000006064820152608401610257565b61058b3361099c565b005b600080fd5b34801561059e57600080fd5b506105af680796e3ea3f8ab0000081565b6040519081526020015b60405180910390f35b3480156105ce57600080fd5b506105af635f316f0081565b3480156105e657600080fd5b506105af680b6255df5f5008000081565b34801561060357600080fd5b506105af6803cb71f51fc558000081565b34801561062057600080fd5b506105af635f2f90e081565b34801561063857600080fd5b5061065c610647366004611875565b60016020526000908152604090205460ff1681565b60405190151581526020016105b9565b34801561067857600080fd5b506105af60035481565b34801561068e57600080fd5b506105af67016345785d8a000081565b3480156106aa57600080fd5b5061058b6106b93660046118a9565b610a83565b3480156106ca57600080fd5b506105af6106d9366004611875565b60026020526000908152604090205481565b3480156106f757600080fd5b506105af610bd1565b34801561070c57600080fd5b50635f2f90e042101561065c565b34801561072657600080fd5b5061058b610be5565b34801561073b57600080fd5b5060045461065c9060ff1681565b34801561075557600080fd5b50635f316f0042101561065c565b34801561076f57600080fd5b5061058b611012565b34801561078457600080fd5b5061078d6108b6565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016105b9565b3480156107be57600080fd5b50635f32c08042101561065c565b3480156107d857600080fd5b506107e16110a4565b6040516105b9919061199a565b3480156107fa57600080fd5b506105af671bc16d674ec8000081565b34801561081657600080fd5b506105af635f32c08081565b34801561082e57600080fd5b506105af60055481565b34801561084457600080fd5b5060045461078d90610100900473ffffffffffffffffffffffffffffffffffffffff1681565b34801561087657600080fd5b5061065c6108d3565b34801561088b57600080fd5b5061058b61089a366004611875565b611168565b3480156108ab57600080fd5b506105af621e848081565b60005473ffffffffffffffffffffffffffffffffffffffff165b90565b60006108e6635f32c080620151806119eb565b421015806108ff5750680b6255df5f5008000060035410155b905090565b6000635f32c08042106109215750680b6255df5f500800006108d0565b635f316f00421061093c5750680796e3ea3f8ab000006108d0565b506803cb71f51fc55800006108d0565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260016020526040812054635f316f004210159060ff16806109865750805b806109955750635f32c0804210155b9392505050565b60006109b26003546109ac610904565b9061129d565b905060003482106109c357346109c5565b815b73ffffffffffffffffffffffffffffffffffffffff841660009081526002602052604081205491925090610a0290671bc16d674ec800009061129d565b90506000828210610a135782610a15565b815b9050610a228582866112a9565b6000610a2e348361129d565b90508015610a7b5760405173ffffffffffffffffffffffffffffffffffffffff87169082156108fc029083906000818181858888f19350505050158015610a79573d6000803e3d6000fd5b505b505050505050565b33610a8c6108b6565b73ffffffffffffffffffffffffffffffffffffffff1614610b09576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610257565b60005b81811015610bcc576001806000858585818110610b52577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050602002016020810190610b679190611875565b73ffffffffffffffffffffffffffffffffffffffff168152602081019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001691151591909117905580610bc481611a87565b915050610b0c565b505050565b610be2635f32c080620151806119eb565b81565b33610bee6108b6565b73ffffffffffffffffffffffffffffffffffffffff1614610c6b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610257565b610c736108d3565b610d25576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604360248201527f4d65746163616e617343726f776473616c653a2063616e206f6e6c792073656e60448201527f64206c6971756964697479206f6e63652068617264636170206973207265616360648201527f6865640000000000000000000000000000000000000000000000000000000000608482015260a401610257565b600480546040517f70a0823100000000000000000000000000000000000000000000000000000000815230928101929092524791600091610100900473ffffffffffffffffffffffffffffffffffffffff16906370a082319060240160206040518083038186803b158015610d9957600080fd5b505afa158015610dad573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dd19190611939565b9050600460019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633f4ba83a6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610e3d57600080fd5b505af1158015610e51573d6000803e3d6000fd5b5050600480546006546040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff918216938101939093526024830186905261010090910416925063095ea7b39150604401602060405180830381600087803b158015610ed357600080fd5b505af1158015610ee7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f0b9190611919565b50600654600480546040517ff305d71900000000000000000000000000000000000000000000000000000000815261010090910473ffffffffffffffffffffffffffffffffffffffff90811692820192909252602481018490526044810184905260648101859052600060848201524260a482015291169063f305d71990849060c4016060604051808303818588803b158015610fa757600080fd5b505af1158015610fbb573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610fe09190611951565b5050600480547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055505050565b3361101b6108b6565b73ffffffffffffffffffffffffffffffffffffffff1614611098576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610257565b6110a26000611448565b565b6060635f32c08042106110eb575060408051808201909152600681527f5075626c6963000000000000000000000000000000000000000000000000000060208201526108d0565b635f316f004210611130575060408051808201909152600581527f4b61726d6100000000000000000000000000000000000000000000000000000060208201526108d0565b5060408051808201909152600581527f436f6f6b73000000000000000000000000000000000000000000000000000000602082015290565b336111716108b6565b73ffffffffffffffffffffffffffffffffffffffff16146111ee576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610257565b73ffffffffffffffffffffffffffffffffffffffff8116611291576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610257565b61129a81611448565b50565b60006109958284611a40565b67016345785d8a0000821015806112c7575067016345785d8a000081105b611353576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603f60248201527f4d65746163616e617343726f776473616c653a20776569416d6f756e7420697360448201527f20736d616c6c6572207468616e206d696e20636f6e747269627574696f6e2e006064820152608401610257565b60035461136090836114bd565b60035573ffffffffffffffffffffffffffffffffffffffff831660009081526002602052604090205461139390836114bd565b73ffffffffffffffffffffffffffffffffffffffff84166000908152600260205260408120919091556113c5836114c9565b6004549091506113f190610100900473ffffffffffffffffffffffffffffffffffffffff1685836114e6565b604080518481526020810183905273ffffffffffffffffffffffffffffffffffffffff8616917fcd60aa75dea3072fbc07ae6d7d856b5dc5f4eee88854f5b4abf7b680ef8bc50f910160405180910390a250505050565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600061099582846119eb565b60006114e06005548361157390919063ffffffff16565b92915050565b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb00000000000000000000000000000000000000000000000000000000179052610bcc90849061157f565b60006109958284611a03565b60006115e1826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff1661168b9092919063ffffffff16565b805190915015610bcc57808060200190518101906115ff9190611919565b610bcc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610257565b606061169a84846000856116a2565b949350505050565b606082471015611734576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610257565b843b61179c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610257565b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516117c5919061197e565b60006040518083038185875af1925050503d8060008114611802576040519150601f19603f3d011682016040523d82523d6000602084013e611807565b606091505b5091509150611817828286611822565b979650505050505050565b60608315611831575081610995565b8251156118415782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610257919061199a565b600060208284031215611886578081fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114610995578182fd5b600080602083850312156118bb578081fd5b823567ffffffffffffffff808211156118d2578283fd5b818501915085601f8301126118e5578283fd5b8135818111156118f3578384fd5b8660208260051b8501011115611907578384fd5b60209290920196919550909350505050565b60006020828403121561192a578081fd5b81518015158114610995578182fd5b60006020828403121561194a578081fd5b5051919050565b600080600060608486031215611965578081fd5b8351925060208401519150604084015190509250925092565b60008251611990818460208701611a57565b9190910192915050565b60006020825282518060208401526119b9816040850160208701611a57565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b600082198211156119fe576119fe611ac0565b500190565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611a3b57611a3b611ac0565b500290565b600082821015611a5257611a52611ac0565b500390565b60005b83811015611a72578181015183820152602001611a5a565b83811115611a81576000848401525b50505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611ab957611ab9611ac0565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea2646970667358221220a888396844de26e58370ccebfe8d9155cfacec092385c6a8bcb405482fc0489164736f6c63430008030033";

type MetacanasCrowdsaleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MetacanasCrowdsaleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MetacanasCrowdsale__factory extends ContractFactory {
  constructor(...args: MetacanasCrowdsaleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MetacanasCrowdsale";
  }

  deploy(
    _metacanaToken: string,
    _metacanasPerBNB: BigNumberish,
    _pancakeRouter: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MetacanasCrowdsale> {
    return super.deploy(
      _metacanaToken,
      _metacanasPerBNB,
      _pancakeRouter,
      overrides || {}
    ) as Promise<MetacanasCrowdsale>;
  }
  getDeployTransaction(
    _metacanaToken: string,
    _metacanasPerBNB: BigNumberish,
    _pancakeRouter: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _metacanaToken,
      _metacanasPerBNB,
      _pancakeRouter,
      overrides || {}
    );
  }
  attach(address: string): MetacanasCrowdsale {
    return super.attach(address) as MetacanasCrowdsale;
  }
  connect(signer: Signer): MetacanasCrowdsale__factory {
    return super.connect(signer) as MetacanasCrowdsale__factory;
  }
  static readonly contractName: "MetacanasCrowdsale";
  public readonly contractName: "MetacanasCrowdsale";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MetacanasCrowdsaleInterface {
    return new utils.Interface(_abi) as MetacanasCrowdsaleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MetacanasCrowdsale {
    return new Contract(address, _abi, signerOrProvider) as MetacanasCrowdsale;
  }
}
