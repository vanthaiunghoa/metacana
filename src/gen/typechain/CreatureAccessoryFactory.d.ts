/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "ethers";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";
import { TypedEventFilter, TypedEvent, TypedListener } from "./commons";

interface CreatureAccessoryFactoryInterface extends ethers.utils.Interface {
  functions: {
    "BASIC_LOOTBOX()": FunctionFragment;
    "GOLD_LOOTBOX()": FunctionFragment;
    "NUM_LOOTBOX_OPTIONS()": FunctionFragment;
    "NUM_OPTIONS()": FunctionFragment;
    "PREMIUM_LOOTBOX()": FunctionFragment;
    "assignOwnership(address,uint256)": FunctionFragment;
    "balanceOf(address,uint256)": FunctionFragment;
    "canMint(uint256,uint256)": FunctionFragment;
    "getOwnerTier(address)": FunctionFragment;
    "lootBoxAddress()": FunctionFragment;
    "mint(address,uint256,uint256,bytes)": FunctionFragment;
    "nftAddress()": FunctionFragment;
    "numOptions()": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "BASIC_LOOTBOX",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "GOLD_LOOTBOX",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "NUM_LOOTBOX_OPTIONS",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "NUM_OPTIONS",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "PREMIUM_LOOTBOX",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "assignOwnership",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "balanceOf",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "canMint",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getOwnerTier",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "lootBoxAddress",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "mint",
    values: [string, BigNumberish, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "nftAddress",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "numOptions",
    values?: undefined
  ): string;

  decodeFunctionResult(
    functionFragment: "BASIC_LOOTBOX",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "GOLD_LOOTBOX",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "NUM_LOOTBOX_OPTIONS",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "NUM_OPTIONS",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "PREMIUM_LOOTBOX",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "assignOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "balanceOf", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "canMint", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getOwnerTier",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "lootBoxAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "mint", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "nftAddress", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "numOptions", data: BytesLike): Result;

  events: {
    "OwnershipGranted(address,uint256,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "OwnershipGranted"): EventFragment;
}

export class CreatureAccessoryFactory extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): Array<TypedListener<EventArgsArray, EventArgsObject>>;
  off<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  on<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  once<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): this;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
    event: TypedEventFilter<EventArgsArray, EventArgsObject>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>;

  interface: CreatureAccessoryFactoryInterface;

  functions: {
    BASIC_LOOTBOX(overrides?: CallOverrides): Promise<[BigNumber]>;

    "BASIC_LOOTBOX()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    GOLD_LOOTBOX(overrides?: CallOverrides): Promise<[BigNumber]>;

    "GOLD_LOOTBOX()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    NUM_LOOTBOX_OPTIONS(overrides?: CallOverrides): Promise<[BigNumber]>;

    "NUM_LOOTBOX_OPTIONS()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    NUM_OPTIONS(overrides?: CallOverrides): Promise<[BigNumber]>;

    "NUM_OPTIONS()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    PREMIUM_LOOTBOX(overrides?: CallOverrides): Promise<[BigNumber]>;

    "PREMIUM_LOOTBOX()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    assignOwnership(
      _address: string,
      _tier: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "assignOwnership(address,uint256)"(
      _address: string,
      _tier: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    balanceOf(
      _owner: string,
      _optionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "balanceOf(address,uint256)"(
      _owner: string,
      _optionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    canMint(
      _optionId: BigNumberish,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "canMint(uint256,uint256)"(
      _optionId: BigNumberish,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    getOwnerTier(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getOwnerTier(address)"(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    lootBoxAddress(overrides?: CallOverrides): Promise<[string]>;

    "lootBoxAddress()"(overrides?: CallOverrides): Promise<[string]>;

    mint(
      _toAddress: string,
      _optionId: BigNumberish,
      _amount: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "mint(address,uint256,uint256,bytes)"(
      _toAddress: string,
      _optionId: BigNumberish,
      _amount: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    nftAddress(overrides?: CallOverrides): Promise<[string]>;

    "nftAddress()"(overrides?: CallOverrides): Promise<[string]>;

    numOptions(overrides?: CallOverrides): Promise<[BigNumber]>;

    "numOptions()"(overrides?: CallOverrides): Promise<[BigNumber]>;
  };

  BASIC_LOOTBOX(overrides?: CallOverrides): Promise<BigNumber>;

  "BASIC_LOOTBOX()"(overrides?: CallOverrides): Promise<BigNumber>;

  GOLD_LOOTBOX(overrides?: CallOverrides): Promise<BigNumber>;

  "GOLD_LOOTBOX()"(overrides?: CallOverrides): Promise<BigNumber>;

  NUM_LOOTBOX_OPTIONS(overrides?: CallOverrides): Promise<BigNumber>;

  "NUM_LOOTBOX_OPTIONS()"(overrides?: CallOverrides): Promise<BigNumber>;

  NUM_OPTIONS(overrides?: CallOverrides): Promise<BigNumber>;

  "NUM_OPTIONS()"(overrides?: CallOverrides): Promise<BigNumber>;

  PREMIUM_LOOTBOX(overrides?: CallOverrides): Promise<BigNumber>;

  "PREMIUM_LOOTBOX()"(overrides?: CallOverrides): Promise<BigNumber>;

  assignOwnership(
    _address: string,
    _tier: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "assignOwnership(address,uint256)"(
    _address: string,
    _tier: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  balanceOf(
    _owner: string,
    _optionId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "balanceOf(address,uint256)"(
    _owner: string,
    _optionId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  canMint(
    _optionId: BigNumberish,
    _amount: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "canMint(uint256,uint256)"(
    _optionId: BigNumberish,
    _amount: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  getOwnerTier(_owner: string, overrides?: CallOverrides): Promise<BigNumber>;

  "getOwnerTier(address)"(
    _owner: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  lootBoxAddress(overrides?: CallOverrides): Promise<string>;

  "lootBoxAddress()"(overrides?: CallOverrides): Promise<string>;

  mint(
    _toAddress: string,
    _optionId: BigNumberish,
    _amount: BigNumberish,
    _data: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "mint(address,uint256,uint256,bytes)"(
    _toAddress: string,
    _optionId: BigNumberish,
    _amount: BigNumberish,
    _data: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  nftAddress(overrides?: CallOverrides): Promise<string>;

  "nftAddress()"(overrides?: CallOverrides): Promise<string>;

  numOptions(overrides?: CallOverrides): Promise<BigNumber>;

  "numOptions()"(overrides?: CallOverrides): Promise<BigNumber>;

  callStatic: {
    BASIC_LOOTBOX(overrides?: CallOverrides): Promise<BigNumber>;

    "BASIC_LOOTBOX()"(overrides?: CallOverrides): Promise<BigNumber>;

    GOLD_LOOTBOX(overrides?: CallOverrides): Promise<BigNumber>;

    "GOLD_LOOTBOX()"(overrides?: CallOverrides): Promise<BigNumber>;

    NUM_LOOTBOX_OPTIONS(overrides?: CallOverrides): Promise<BigNumber>;

    "NUM_LOOTBOX_OPTIONS()"(overrides?: CallOverrides): Promise<BigNumber>;

    NUM_OPTIONS(overrides?: CallOverrides): Promise<BigNumber>;

    "NUM_OPTIONS()"(overrides?: CallOverrides): Promise<BigNumber>;

    PREMIUM_LOOTBOX(overrides?: CallOverrides): Promise<BigNumber>;

    "PREMIUM_LOOTBOX()"(overrides?: CallOverrides): Promise<BigNumber>;

    assignOwnership(
      _address: string,
      _tier: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "assignOwnership(address,uint256)"(
      _address: string,
      _tier: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    balanceOf(
      _owner: string,
      _optionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "balanceOf(address,uint256)"(
      _owner: string,
      _optionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    canMint(
      _optionId: BigNumberish,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "canMint(uint256,uint256)"(
      _optionId: BigNumberish,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    getOwnerTier(_owner: string, overrides?: CallOverrides): Promise<BigNumber>;

    "getOwnerTier(address)"(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    lootBoxAddress(overrides?: CallOverrides): Promise<string>;

    "lootBoxAddress()"(overrides?: CallOverrides): Promise<string>;

    mint(
      _toAddress: string,
      _optionId: BigNumberish,
      _amount: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "mint(address,uint256,uint256,bytes)"(
      _toAddress: string,
      _optionId: BigNumberish,
      _amount: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    nftAddress(overrides?: CallOverrides): Promise<string>;

    "nftAddress()"(overrides?: CallOverrides): Promise<string>;

    numOptions(overrides?: CallOverrides): Promise<BigNumber>;

    "numOptions()"(overrides?: CallOverrides): Promise<BigNumber>;
  };

  filters: {
    OwnershipGranted(
      owner: string | null,
      previousTier: BigNumberish | null,
      newTier: BigNumberish | null
    ): TypedEventFilter<
      [string, BigNumber, BigNumber],
      { owner: string; previousTier: BigNumber; newTier: BigNumber }
    >;
  };

  estimateGas: {
    BASIC_LOOTBOX(overrides?: CallOverrides): Promise<BigNumber>;

    "BASIC_LOOTBOX()"(overrides?: CallOverrides): Promise<BigNumber>;

    GOLD_LOOTBOX(overrides?: CallOverrides): Promise<BigNumber>;

    "GOLD_LOOTBOX()"(overrides?: CallOverrides): Promise<BigNumber>;

    NUM_LOOTBOX_OPTIONS(overrides?: CallOverrides): Promise<BigNumber>;

    "NUM_LOOTBOX_OPTIONS()"(overrides?: CallOverrides): Promise<BigNumber>;

    NUM_OPTIONS(overrides?: CallOverrides): Promise<BigNumber>;

    "NUM_OPTIONS()"(overrides?: CallOverrides): Promise<BigNumber>;

    PREMIUM_LOOTBOX(overrides?: CallOverrides): Promise<BigNumber>;

    "PREMIUM_LOOTBOX()"(overrides?: CallOverrides): Promise<BigNumber>;

    assignOwnership(
      _address: string,
      _tier: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "assignOwnership(address,uint256)"(
      _address: string,
      _tier: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    balanceOf(
      _owner: string,
      _optionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "balanceOf(address,uint256)"(
      _owner: string,
      _optionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    canMint(
      _optionId: BigNumberish,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "canMint(uint256,uint256)"(
      _optionId: BigNumberish,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getOwnerTier(_owner: string, overrides?: CallOverrides): Promise<BigNumber>;

    "getOwnerTier(address)"(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    lootBoxAddress(overrides?: CallOverrides): Promise<BigNumber>;

    "lootBoxAddress()"(overrides?: CallOverrides): Promise<BigNumber>;

    mint(
      _toAddress: string,
      _optionId: BigNumberish,
      _amount: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "mint(address,uint256,uint256,bytes)"(
      _toAddress: string,
      _optionId: BigNumberish,
      _amount: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    nftAddress(overrides?: CallOverrides): Promise<BigNumber>;

    "nftAddress()"(overrides?: CallOverrides): Promise<BigNumber>;

    numOptions(overrides?: CallOverrides): Promise<BigNumber>;

    "numOptions()"(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    BASIC_LOOTBOX(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "BASIC_LOOTBOX()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    GOLD_LOOTBOX(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "GOLD_LOOTBOX()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    NUM_LOOTBOX_OPTIONS(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "NUM_LOOTBOX_OPTIONS()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    NUM_OPTIONS(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "NUM_OPTIONS()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    PREMIUM_LOOTBOX(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "PREMIUM_LOOTBOX()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    assignOwnership(
      _address: string,
      _tier: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "assignOwnership(address,uint256)"(
      _address: string,
      _tier: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    balanceOf(
      _owner: string,
      _optionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "balanceOf(address,uint256)"(
      _owner: string,
      _optionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    canMint(
      _optionId: BigNumberish,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "canMint(uint256,uint256)"(
      _optionId: BigNumberish,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getOwnerTier(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getOwnerTier(address)"(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    lootBoxAddress(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "lootBoxAddress()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    mint(
      _toAddress: string,
      _optionId: BigNumberish,
      _amount: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "mint(address,uint256,uint256,bytes)"(
      _toAddress: string,
      _optionId: BigNumberish,
      _amount: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    nftAddress(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "nftAddress()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    numOptions(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "numOptions()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
