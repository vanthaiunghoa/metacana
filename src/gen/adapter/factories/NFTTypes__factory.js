"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
exports.__esModule = true;
exports.NFTTypes__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var ethers_1 = require("ethers");
var _abi = [
    {
        inputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256"
            },
        ],
        name: "NFT_Type",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string"
            },
        ],
        stateMutability: "view",
        type: "function"
    },
];
var _bytecode = "0x608060405234801561001057600080fd5b50610206806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80635ef8693914610030575b600080fd5b61004361003e3660046100f3565b610059565b604051610050919061010b565b60405180910390f35b600060208190529081526040902080546100729061017c565b80601f016020809104026020016040519081016040528092919081815260200182805461009e9061017c565b80156100eb5780601f106100c0576101008083540402835291602001916100eb565b820191906000526020600020905b8154815290600101906020018083116100ce57829003601f168201915b505050505081565b600060208284031215610104578081fd5b5035919050565b6000602080835283518082850152825b818110156101375785810183015185820160400152820161011b565b818111156101485783604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b600181811c9082168061019057607f821691505b602082108114156101ca577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b5091905056fea2646970667358221220a597e2dce72d793bf0c5958a0d7e1823c1baa5c3cdc2b1626c6043fe1672e6a564736f6c63430008030033";
var isSuperArgs = function (xs) { return xs.length > 1; };
var NFTTypes__factory = /** @class */ (function (_super) {
    __extends(NFTTypes__factory, _super);
    function NFTTypes__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        _this.contractName = "NFTTypes";
        return _this;
    }
    NFTTypes__factory.prototype.deploy = function (overrides) {
        return _super.prototype.deploy.call(this, overrides || {});
    };
    NFTTypes__factory.prototype.getDeployTransaction = function (overrides) {
        return _super.prototype.getDeployTransaction.call(this, overrides || {});
    };
    NFTTypes__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    NFTTypes__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    NFTTypes__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    NFTTypes__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    NFTTypes__factory.bytecode = _bytecode;
    NFTTypes__factory.abi = _abi;
    return NFTTypes__factory;
}(ethers_1.ContractFactory));
exports.NFTTypes__factory = NFTTypes__factory;
