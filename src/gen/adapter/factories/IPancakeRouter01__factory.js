"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
exports.__esModule = true;
exports.IPancakeRouter01__factory = void 0;
var ethers_1 = require("ethers");
var _abi = [
    {
        inputs: [],
        name: "WETH",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address"
            },
        ],
        stateMutability: "pure",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "tokenA",
                type: "address"
            },
            {
                internalType: "address",
                name: "tokenB",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "amountADesired",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "amountBDesired",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "amountAMin",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "amountBMin",
                type: "uint256"
            },
            {
                internalType: "address",
                name: "to",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "deadline",
                type: "uint256"
            },
        ],
        name: "addLiquidity",
        outputs: [
            {
                internalType: "uint256",
                name: "amountA",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "amountB",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "liquidity",
                type: "uint256"
            },
        ],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "token",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "amountTokenDesired",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "amountTokenMin",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "amountETHMin",
                type: "uint256"
            },
            {
                internalType: "address",
                name: "to",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "deadline",
                type: "uint256"
            },
        ],
        name: "addLiquidityETH",
        outputs: [
            {
                internalType: "uint256",
                name: "amountToken",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "amountETH",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "liquidity",
                type: "uint256"
            },
        ],
        stateMutability: "payable",
        type: "function"
    },
    {
        inputs: [],
        name: "factory",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address"
            },
        ],
        stateMutability: "pure",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "reserveIn",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "reserveOut",
                type: "uint256"
            },
        ],
        name: "getAmountIn",
        outputs: [
            {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256"
            },
        ],
        stateMutability: "pure",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "reserveIn",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "reserveOut",
                type: "uint256"
            },
        ],
        name: "getAmountOut",
        outputs: [
            {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256"
            },
        ],
        stateMutability: "pure",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256"
            },
            {
                internalType: "address[]",
                name: "path",
                type: "address[]"
            },
        ],
        name: "getAmountsIn",
        outputs: [
            {
                internalType: "uint256[]",
                name: "amounts",
                type: "uint256[]"
            },
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256"
            },
            {
                internalType: "address[]",
                name: "path",
                type: "address[]"
            },
        ],
        name: "getAmountsOut",
        outputs: [
            {
                internalType: "uint256[]",
                name: "amounts",
                type: "uint256[]"
            },
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "amountA",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "reserveA",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "reserveB",
                type: "uint256"
            },
        ],
        name: "quote",
        outputs: [
            {
                internalType: "uint256",
                name: "amountB",
                type: "uint256"
            },
        ],
        stateMutability: "pure",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "tokenA",
                type: "address"
            },
            {
                internalType: "address",
                name: "tokenB",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "liquidity",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "amountAMin",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "amountBMin",
                type: "uint256"
            },
            {
                internalType: "address",
                name: "to",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "deadline",
                type: "uint256"
            },
        ],
        name: "removeLiquidity",
        outputs: [
            {
                internalType: "uint256",
                name: "amountA",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "amountB",
                type: "uint256"
            },
        ],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "token",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "liquidity",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "amountTokenMin",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "amountETHMin",
                type: "uint256"
            },
            {
                internalType: "address",
                name: "to",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "deadline",
                type: "uint256"
            },
        ],
        name: "removeLiquidityETH",
        outputs: [
            {
                internalType: "uint256",
                name: "amountToken",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "amountETH",
                type: "uint256"
            },
        ],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "token",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "liquidity",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "amountTokenMin",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "amountETHMin",
                type: "uint256"
            },
            {
                internalType: "address",
                name: "to",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "deadline",
                type: "uint256"
            },
            {
                internalType: "bool",
                name: "approveMax",
                type: "bool"
            },
            {
                internalType: "uint8",
                name: "v",
                type: "uint8"
            },
            {
                internalType: "bytes32",
                name: "r",
                type: "bytes32"
            },
            {
                internalType: "bytes32",
                name: "s",
                type: "bytes32"
            },
        ],
        name: "removeLiquidityETHWithPermit",
        outputs: [
            {
                internalType: "uint256",
                name: "amountToken",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "amountETH",
                type: "uint256"
            },
        ],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "tokenA",
                type: "address"
            },
            {
                internalType: "address",
                name: "tokenB",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "liquidity",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "amountAMin",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "amountBMin",
                type: "uint256"
            },
            {
                internalType: "address",
                name: "to",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "deadline",
                type: "uint256"
            },
            {
                internalType: "bool",
                name: "approveMax",
                type: "bool"
            },
            {
                internalType: "uint8",
                name: "v",
                type: "uint8"
            },
            {
                internalType: "bytes32",
                name: "r",
                type: "bytes32"
            },
            {
                internalType: "bytes32",
                name: "s",
                type: "bytes32"
            },
        ],
        name: "removeLiquidityWithPermit",
        outputs: [
            {
                internalType: "uint256",
                name: "amountA",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "amountB",
                type: "uint256"
            },
        ],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256"
            },
            {
                internalType: "address[]",
                name: "path",
                type: "address[]"
            },
            {
                internalType: "address",
                name: "to",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "deadline",
                type: "uint256"
            },
        ],
        name: "swapETHForExactTokens",
        outputs: [
            {
                internalType: "uint256[]",
                name: "amounts",
                type: "uint256[]"
            },
        ],
        stateMutability: "payable",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "amountOutMin",
                type: "uint256"
            },
            {
                internalType: "address[]",
                name: "path",
                type: "address[]"
            },
            {
                internalType: "address",
                name: "to",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "deadline",
                type: "uint256"
            },
        ],
        name: "swapExactETHForTokens",
        outputs: [
            {
                internalType: "uint256[]",
                name: "amounts",
                type: "uint256[]"
            },
        ],
        stateMutability: "payable",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "amountOutMin",
                type: "uint256"
            },
            {
                internalType: "address[]",
                name: "path",
                type: "address[]"
            },
            {
                internalType: "address",
                name: "to",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "deadline",
                type: "uint256"
            },
        ],
        name: "swapExactTokensForETH",
        outputs: [
            {
                internalType: "uint256[]",
                name: "amounts",
                type: "uint256[]"
            },
        ],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "amountOutMin",
                type: "uint256"
            },
            {
                internalType: "address[]",
                name: "path",
                type: "address[]"
            },
            {
                internalType: "address",
                name: "to",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "deadline",
                type: "uint256"
            },
        ],
        name: "swapExactTokensForTokens",
        outputs: [
            {
                internalType: "uint256[]",
                name: "amounts",
                type: "uint256[]"
            },
        ],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "amountInMax",
                type: "uint256"
            },
            {
                internalType: "address[]",
                name: "path",
                type: "address[]"
            },
            {
                internalType: "address",
                name: "to",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "deadline",
                type: "uint256"
            },
        ],
        name: "swapTokensForExactETH",
        outputs: [
            {
                internalType: "uint256[]",
                name: "amounts",
                type: "uint256[]"
            },
        ],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "amountInMax",
                type: "uint256"
            },
            {
                internalType: "address[]",
                name: "path",
                type: "address[]"
            },
            {
                internalType: "address",
                name: "to",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "deadline",
                type: "uint256"
            },
        ],
        name: "swapTokensForExactTokens",
        outputs: [
            {
                internalType: "uint256[]",
                name: "amounts",
                type: "uint256[]"
            },
        ],
        stateMutability: "nonpayable",
        type: "function"
    },
];
var IPancakeRouter01__factory = /** @class */ (function () {
    function IPancakeRouter01__factory() {
    }
    IPancakeRouter01__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    IPancakeRouter01__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    IPancakeRouter01__factory.abi = _abi;
    return IPancakeRouter01__factory;
}());
exports.IPancakeRouter01__factory = IPancakeRouter01__factory;
