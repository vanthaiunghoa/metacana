"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
exports.__esModule = true;
exports.ExposedStakeableToken__factory = void 0;
var ethers_1 = require("ethers");
var ExposedStakeableToken__factory = /** @class */ (function (_super) {
    __extends(ExposedStakeableToken__factory, _super);
    function ExposedStakeableToken__factory(signer) {
        return _super.call(this, _abi, _bytecode, signer) || this;
    }
    ExposedStakeableToken__factory.prototype.deploy = function (_underlyingAddress, _stakeableStrategyAddress, overrides) {
        return _super.prototype.deploy.call(this, _underlyingAddress, _stakeableStrategyAddress, overrides || {});
    };
    ExposedStakeableToken__factory.prototype.getDeployTransaction = function (_underlyingAddress, _stakeableStrategyAddress, overrides) {
        return _super.prototype.getDeployTransaction.call(this, _underlyingAddress, _stakeableStrategyAddress, overrides || {});
    };
    ExposedStakeableToken__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    ExposedStakeableToken__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    ExposedStakeableToken__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    return ExposedStakeableToken__factory;
}(ethers_1.ContractFactory));
exports.ExposedStakeableToken__factory = ExposedStakeableToken__factory;
var _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "_underlyingAddress",
                type: "address"
            },
            {
                internalType: "address",
                name: "_stakeableStrategyAddress",
                type: "address"
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor"
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "previousStakeableStrategy",
                type: "address"
            },
            {
                indexed: true,
                internalType: "address",
                name: "newStakeableStrategy",
                type: "address"
            },
        ],
        name: "StakeableStrategyUpdated",
        type: "event"
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "user",
                type: "address"
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount",
                type: "uint256"
            },
        ],
        name: "StakedTokens",
        type: "event"
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "user",
                type: "address"
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount",
                type: "uint256"
            },
        ],
        name: "WithdrawnTokens",
        type: "event"
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address"
            },
        ],
        name: "balanceOf",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256"
            },
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [],
        name: "getStakers",
        outputs: [
            {
                internalType: "address[]",
                name: "",
                type: "address[]"
            },
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address"
            },
        ],
        name: "lastUpdateTime",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256"
            },
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_stakeableStrategyAddress",
                type: "address"
            },
        ],
        name: "setStakeableStrategy",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256"
            },
        ],
        name: "stake",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [],
        name: "stakeableStrategy",
        outputs: [
            {
                internalType: "contract IStakeableStrategy",
                name: "",
                type: "address"
            },
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256"
            },
        ],
        name: "stakers",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address"
            },
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [],
        name: "totalSupply",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256"
            },
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [],
        name: "underlying",
        outputs: [
            {
                internalType: "contract IERC20",
                name: "",
                type: "address"
            },
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256"
            },
        ],
        name: "withdraw",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
    },
];
var _bytecode = "0x608060405234801561001057600080fd5b50604051610c4a380380610c4a83398101604081905261002f916100ae565b6000805473ffffffffffffffffffffffffffffffffffffffff9384167fffffffffffffffffffffffff000000000000000000000000000000000000000091821617909155600680549290931691161790556100e0565b805173ffffffffffffffffffffffffffffffffffffffff811681146100a957600080fd5b919050565b600080604083850312156100c0578182fd5b6100c983610085565b91506100d760208401610085565b90509250929050565b610b5b806100ef6000396000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c80636f307dc31161007657806399cc23cb1161005b57806399cc23cb1461014e578063a694fc3a14610161578063fd5e6dd114610174576100be565b80636f307dc31461013357806370a082311461013b576100be565b80632e1a7d4d116100a75780632e1a7d4d146100f457806343352d61146101095780635153e5cc1461011e576100be565b806318160ddd146100c35780632ce9aead146100e1575b600080fd5b6100cb610187565b6040516100d89190610abe565b60405180910390f35b6100cb6100ef366004610869565b61018d565b6101076101023660046108bd565b6101b5565b005b6101116101c1565b6040516100d8919061094d565b610126610230565b6040516100d891906108d5565b61012661024c565b6100cb610149366004610869565b610268565b61010761015c366004610869565b610290565b61010761016f3660046108bd565b610299565b6101266101823660046108bd565b6102a2565b60015490565b73ffffffffffffffffffffffffffffffffffffffff1660009081526003602052604090205490565b6101be816102d9565b50565b6060600580548060200260200160405190810160405280929190818152602001828054801561022657602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116101fb575b5050505050905090565b60065473ffffffffffffffffffffffffffffffffffffffff1681565b60005473ffffffffffffffffffffffffffffffffffffffff1681565b73ffffffffffffffffffffffffffffffffffffffff1660009081526002602052604090205490565b6101be816102e3565b6101be81610371565b600581815481106102b257600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905081565b6101be813361065e565b60065460405173ffffffffffffffffffffffffffffffffffffffff8084169216907f75774f26d6124c861a4792c459d439572cd2430cbcd07f031b24315c0ad86cec90600090a3600680547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b3380156103a15773ffffffffffffffffffffffffffffffffffffffff811660009081526003602052604090204290555b60065473ffffffffffffffffffffffffffffffffffffffff16158061046957506006546040517f36d8bf9300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116906336d8bf93906104179033906004016108d5565b602060405180830381600087803b15801561043157600080fd5b505af1158015610445573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610469919061089d565b6104a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049f906109a7565b60405180910390fd5b336000908152600460205260409020546105265760058054600181019091557f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180547fffffffffffffffffffffffff0000000000000000000000000000000000000000163390811790915560009081526004602052604090204290555b600154610533908361084a565b60015533600090815260026020526040902054610550908361084a565b33600081815260026020526040808220939093555491517f23b872dd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909216916323b872dd916105b991309087906004016108f6565b602060405180830381600087803b1580156105d357600080fd5b505af11580156105e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060b919061089d565b503373ffffffffffffffffffffffffffffffffffffffff167f07ebe4cc0edd899e6e61889dcebbcaeb1e6ae4e97d01019119e07184016bd076836040516106529190610abe565b60405180910390a25050565b33801561068e5773ffffffffffffffffffffffffffffffffffffffff811660009081526003602052604090204290555b600083116106c8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049f90610a2a565b33600090815260026020526040902054831115610711576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049f90610a61565b60015461071e908461085d565b6001553360009081526002602052604090205461073b908461085d565b33600090815260026020526040808220929092555490517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063a9059cbb906107a49085908790600401610927565b602060405180830381600087803b1580156107be57600080fd5b505af11580156107d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f6919061089d565b503373ffffffffffffffffffffffffffffffffffffffff167f373d92bf7d9cdd58a8c86db5461f3cdcd325b803fdbac8d1b224a0f5fce847b88460405161083d9190610abe565b60405180910390a2505050565b60006108568284610ac7565b9392505050565b60006108568284610adf565b60006020828403121561087a578081fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114610856578182fd5b6000602082840312156108ae578081fd5b81518015158114610856578182fd5b6000602082840312156108ce578081fd5b5035919050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff9384168152919092166020820152604081019190915260600190565b73ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b6020808252825182820181905260009190848201906040850190845b8181101561099b57835173ffffffffffffffffffffffffffffffffffffffff1683529284019291840191600101610969565b50909695505050505050565b60208082526045908201527f5374616b6561626c65546f6b656e235f7374616b653a2053656e64657220646f60408201527f65736e2774206d6565742074686520726571756972656d656e747320746f207360608201527f74616b652e000000000000000000000000000000000000000000000000000000608082015260a00190565b60208082526011908201527f43616e6e6f742077697468647261772030000000000000000000000000000000604082015260600190565b60208082526028908201527f43616e6e6f74207769746864726177206d6f7265207468616e2077686174277360408201527f207374616b65642e000000000000000000000000000000000000000000000000606082015260800190565b90815260200190565b60008219821115610ada57610ada610af6565b500190565b600082821015610af157610af1610af6565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea26469706673582212202d2858e66cb5ac91793bc74ef7138e8090d7ac08a2c41b38d8f0ac8b1dae4a1764736f6c63430008000033";
