"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
exports.__esModule = true;
exports.Marketplace__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var ethers_1 = require("ethers");
var _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "tokenId",
                type: "uint256"
            },
            {
                indexed: false,
                internalType: "address",
                name: "contractAddress",
                type: "address"
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "price",
                type: "uint256"
            },
            {
                indexed: false,
                internalType: "address",
                name: "paymentToken",
                type: "address"
            },
            {
                indexed: false,
                internalType: "address",
                name: "seller",
                type: "address"
            },
            {
                indexed: false,
                internalType: "address",
                name: "buyer",
                type: "address"
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount",
                type: "uint256"
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "fee",
                type: "uint256"
            },
        ],
        name: "MatchTransaction",
        type: "event"
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "previousOwner",
                type: "address"
            },
            {
                indexed: true,
                internalType: "address",
                name: "newOwner",
                type: "address"
            },
        ],
        name: "OwnershipTransferred",
        type: "event"
    },
    {
        inputs: [],
        name: "feeToAddress",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address"
            },
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_nftAddress",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "_tokenId",
                type: "uint256"
            },
            {
                internalType: "address",
                name: "_paymentErc20",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "_price",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "_saltNonce",
                type: "uint256"
            },
        ],
        name: "getMessageHash",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32"
            },
        ],
        stateMutability: "pure",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "address[2]",
                name: "addresses",
                type: "address[2]"
            },
            {
                internalType: "uint256[3]",
                name: "values",
                type: "uint256[3]"
            },
            {
                internalType: "bytes",
                name: "signature",
                type: "bytes"
            },
        ],
        name: "ignoreSignature",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "address[3]",
                name: "addresses",
                type: "address[3]"
            },
            {
                internalType: "uint256[4]",
                name: "values",
                type: "uint256[4]"
            },
            {
                internalType: "bytes",
                name: "signature",
                type: "bytes"
            },
        ],
        name: "matchTransaction",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool"
            },
        ],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address"
            },
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address"
            },
        ],
        name: "paymentTokens",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool"
            },
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "address[]",
                name: "_removedPaymentTokens",
                type: "address[]"
            },
        ],
        name: "removePaymentTokens",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_feeToAddress",
                type: "address"
            },
        ],
        name: "setFeeToAddress",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "address[]",
                name: "_paymentTokens",
                type: "address[]"
            },
        ],
        name: "setPaymentTokens",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_transactionFee",
                type: "uint256"
            },
        ],
        name: "setTransactionFee",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [],
        name: "transactionFee",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256"
            },
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newOwner",
                type: "address"
            },
        ],
        name: "transferOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "",
                type: "bytes"
            },
        ],
        name: "usedSignatures",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool"
            },
        ],
        stateMutability: "view",
        type: "function"
    },
];
var _bytecode = "";
var isSuperArgs = function (xs) { return xs.length > 1; };
var Marketplace__factory = /** @class */ (function (_super) {
    __extends(Marketplace__factory, _super);
    function Marketplace__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        _this.contractName = "Marketplace";
        return _this;
    }
    Marketplace__factory.prototype.deploy = function (overrides) {
        return _super.prototype.deploy.call(this, overrides || {});
    };
    Marketplace__factory.prototype.getDeployTransaction = function (overrides) {
        return _super.prototype.getDeployTransaction.call(this, overrides || {});
    };
    Marketplace__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    Marketplace__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    Marketplace__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    Marketplace__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    Marketplace__factory.bytecode = _bytecode;
    Marketplace__factory.abi = _abi;
    return Marketplace__factory;
}(ethers_1.ContractFactory));
exports.Marketplace__factory = Marketplace__factory;
